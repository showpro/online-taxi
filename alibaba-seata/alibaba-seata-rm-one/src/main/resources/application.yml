server:
  #服务端口
  port: 8001

spring:
  cloud:
    alibaba:
      seata:
        #事务组：fbs_tx_group
        #和seata server的file.conf（vgroup_mapping.fbs_tx_group= "default"），注意：1.4版本的seata server的file.conf已经去掉了
        #以及每个微服务resources目录下的file.conf（vgroup_mapping.fbs_tx_group= "default"）要一致
        tx-service-group: fbs_tx_group
  application:
    #应用名称
    name: seata-one
    #数据库连接配置
  datasource:
    #配置当前使用的数据源的操作类型
    type: com.alibaba.druid.pool.DruidDataSource
    #配置MySQL的驱动程序类
    driver-class-name: com.mysql.cj.jdbc.Driver
    #数据库连接地址
    url: jdbc:mysql://localhost:3306/seata-rm-one?characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    #数据库连接用户名
    username: root
    #数据库连接密码
    password: 123456
    #进行数据库连接池的配置
    dbcp2:
      #初始化提供的连接数
      initial-size: 5
      #数据库连接池的最小维持连接数
      min-idle: 5
      #最大的连接数
      max-total: 5
      #等待连接获取的最大超时时间
      max-wait-millis: 200
      validation-query: SELECT 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false

#mybatis配置
mybatis:
  #mybatis配置文件所在路径
  config-location: classpath:mybatis/mybatis.cfg.xml
  #定义所有操作类的别名所在包
  type-aliases-package: com.online.taxi.one
  #所有的mapper映射文件
  mapper-locations:
    - classpath:mybatis/mapper/*.xml


#注册中心
eureka:
  #  server:
  #    enable-self-preservation: false       #关闭保护机制
  #    eviction-interval-timer-in-ms: 2000   #剔除失效服务间隔,单位毫秒
  client:
    healthcheck:
      #开启健康检查，需要引入actuator
      enabled: true
    #设置服务注册中心的URL
    service-url:
      defaultZone: http://root:root@eureka-7900:7900/eureka/
  instance:
    #默认情况下，虚拟主机名=服务名称，虚拟主机名最好不要用"_"。
    virtual-host-name: seata-one
    #发送心跳给server的频率，每隔这个时间会主动心跳一次（定时任务）com/netflix/discovery/DiscoveryClient.class:905
    lease-renewal-interval-in-seconds: 1
    #Server从收到client后，下一次收到心跳的间隔时间。超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除
    lease-expiration-duration-in-seconds: 1

    metadata-map:
      user.name: root
      user.password: root

#Admin监控  http://localhost:8080/actuator/health、http://localhost:8080/actuator/hystrix.stream
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS  #默认是never

logging:
  level:
    root: info
    org.springframework.web.servlet: debug      

